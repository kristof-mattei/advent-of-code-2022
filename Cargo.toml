[package]
name = "advent-of-code-2022"
# don't change this, it's updated before an actual build by update-version.sh
version = "0.0.0-development"
edition = "2021"
rust-version = "1.75.0"
authors = ["Kristof Mattei"]
license-file = "LICENSE"
description = "Advent of Code 2022"
repository = "https://github.com/kristof-mattei/advent-of-code-2022"
keywords = ["playground"]
categories = ["playground"]

[profile.dev]
debug = true

[profile.release]
debug = true

[profile.bench]
debug = true

[profile.test]
debug = true

[lints.clippy]
# don't stop from compiling / running
all = "warn"
pedantic = "warn"
cargo = "warn"
# this one causes confusion when combining variables (`foo`) and
# dereferenced variables (`foo.bar`). The latter cannot be inlined
# so we don't inline anything
uninlined-format-args = { level = "allow", priority = 127 }
cast-sign-loss = { level = "allow", priority = 127 }

[lints.rust]
let_underscore_drop = { level = "deny", priority = 127 }
non_ascii_idents = { level = "deny", priority = 127 }

[profile.dev.package.backtrace]
opt-level = 3

[features]
coverage = []

[dependencies]
nu-ansi-term = "0.49.0"
regex = "1.10.2"
color-eyre = "0.6.2"
# reqwest = { version = "0.11.5", features = ["json"] }
# serde_json = "1.0.68"
# serde = { version = "1.0.130", features = ["derive"] }
# futures = "0.3.17"
# tokio = { version = "1.12.0", features = ["full"] }
# log = "0.4.14"
# env_logger = "0.9.0"
# serde_yaml = "0.8.21"
# clap = { version = "3.0.14", features = ["derive"] }

# We compile the Docker container with musl to get a static library. Smaller, faster.
# BUT that means that we need to include openssl
# Documentation on the syntax:
# https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#platform-specific-dependencies
[target.'cfg(all(target_arch = "x86_64", target_os="linux", target_env="musl"))'.dependencies]
# openssl = { version = "0.10.36", features = ["vendored"] }
